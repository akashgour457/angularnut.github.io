{"version":3,"sources":["./src/app/nut-taxonomy/taxonomy-list/taxonomy-list.component.html","./src/app/nut-taxonomy/nut-taxonomy-routing.module.ts","./src/app/nut-taxonomy/nut-taxonomy.module.ts","./src/app/nut-taxonomy/taxonomy-list/taxonomy-list.component.css","./src/app/nut-taxonomy/taxonomy-list/taxonomy-list.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,irBAAknB,YAAY,gBAAgB,YAAY,yaAAya,YAAY,k1B;;;;;;;;;;;;;;;;;;;ACArjC;AACc;AACyB;AAIhF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAG,EAAE,EAAE,SAAS,EAAE,4FAAqB,EAAG;IAChD,EAAE,IAAI,EAAG,MAAM,EAAE,SAAS,EAAE,4FAAqB,EAAG;CACrD,CAAC;AAMF,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;CAAI;AAA5B,wBAAwB;IAJpC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,wBAAwB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;ACfI;AACM;AAE0B;AACO;AACe;AAC3D;AAqBpC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;CAAI;AAArB,iBAAiB;IAlB7B,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,4FAAqB,CAAC;QACrC,OAAO,EAAE;YACP,4DAAY;YACZ,qFAAwB,EAAE,0DAAc,EAAC,sDAAU,EAAE,uDAAW,EAAC,qDAAS,EAAC,4DAAgB;YAC3F,iDAAS,CAAC,OAAO,CAAC;gBAChB,QAAQ,EAAE,IAAI;gBACd,cAAc,EAAE,IAAI;gBACpB,eAAe,EAAE,IAAI;gBACrB,iBAAiB,EAAE,IAAI;gBACvB,gBAAgB,EAAE,SAAS;gBAC3B,eAAe,EAAE;gBACf,wBAAwB;iBACzB;aACF,CAAC;SAEH;KACF,CAAC;GACW,iBAAiB,CAAI;AAAJ;;;;;;;;;;;;;AC3B9B;AAAe,6GAA8C,mM;;;;;;;;;;;;;;;;;;;;ACAX;AACsB;AACT;AAC4B;AAO3F,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAKhC,YAAoB,MAAa,EAAQ,iBAAmC;QAAxD,WAAM,GAAN,MAAM,CAAO;QAAQ,sBAAiB,GAAjB,iBAAiB,CAAkB;QAD5E,aAAQ,GAAK,EAAE,CAAC;QAEX,IAAI,CAAC,UAAU,GAAG,qEAAW,CAAC,UAAU,CAAC;QACzC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC/B,IAAI,KAAK,YAAY,6DAAa,EAAG;gBACnC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE;YACnE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IAGL,CAAC;IAEF,QAAQ;IACR,CAAC;CAEF;;YAnB4B,sDAAM;YAA0B,0FAAiB;;AALjE,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,4PAA6C;;KAE9C,CAAC;GACW,qBAAqB,CAwBjC;AAxBiC","file":"nut-taxonomy-nut-taxonomy-module-es2015.js","sourcesContent":["export default \"<div class=\\\"text-center\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\">\\n                    <CoreLib-list-taxonomies routeUrl = {{currentURL}} magazineId=\\\"{{magazineId}}\\\"></CoreLib-list-taxonomies>     \\n                </div>\\n                <div class=\\\"col-md-4 mt-5\\\">\\n                    <div class=\\\"mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\">\\n                        <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TaxonomyListComponent } from './taxonomy-list/taxonomy-list.component';\n\n\n\nconst routes: Routes = [\n  { path : \"\", component: TaxonomyListComponent  },\n  { path : \":any\", component: TaxonomyListComponent  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NutTaxonomyRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NutTaxonomyRoutingModule } from './nut-taxonomy-routing.module';\nimport { TaxonomyListComponent } from './taxonomy-list/taxonomy-list.component';\nimport { ContentsModule,HomeModule, SitesModule,AdsModule,TaxonomiesModule} from 'rodman-core';\nimport { DfpModule } from 'ngx-dfp';\n\n\n@NgModule({\n  declarations: [TaxonomyListComponent],\n  imports: [\n    CommonModule,\n    NutTaxonomyRoutingModule, ContentsModule,HomeModule, SitesModule,AdsModule,TaxonomiesModule,\n    DfpModule.forRoot({\n      idleLoad: true,\n      enableVideoAds: true,\n      personalizedAds: true, // Request personalized ads by default\n      singleRequestMode: true, // Only applies to initial refresh\n      onSameNavigation: 'refresh',\n      globalTargeting: {\n        // food: ['NUT', 'HOME']\n      }\n    }) \n\n  ]\n})\nexport class NutTaxonomyModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9OVVQvc3JjL2FwcC9udXQtdGF4b25vbXkvdGF4b25vbXktbGlzdC90YXhvbm9teS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute ,NavigationEnd } from '@angular/router'; \nimport{ environment } from '../../../environments/environment';\nimport { RodmanCoreService } from '../../../../../rodman-core/src/lib/rodman-core.service';\n\n@Component({\n  selector: 'NUT-taxonomy-list',\n  templateUrl: './taxonomy-list.component.html',\n  styleUrls: ['./taxonomy-list.component.css']\n})\nexport class TaxonomyListComponent implements OnInit {\n  public magazineId :any;\n  currentURL : any ;\n  viewAdRender:number;\n  getAllAd:any=[];\n  constructor(private router:Router,public RodmanCoreService:RodmanCoreService) {\n       this.magazineId = environment.magazineId;\n       router.events.subscribe(event => {\n        if (event instanceof NavigationEnd ) {\n          this.currentURL = event.url; \n        }\n      });\n\n      this.RodmanCoreService.getAllAdst(this.magazineId).subscribe((data =>{\n        this.getAllAd = data;\n        this.viewAdRender = 1;\n     }))\n\n\n   }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///"}