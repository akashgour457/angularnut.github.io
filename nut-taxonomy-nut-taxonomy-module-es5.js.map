{"version":3,"sources":["src/app/nut-taxonomy/taxonomy-list/taxonomy-list.component.html","src/app/nut-taxonomy/nut-taxonomy-routing.module.ts","src/app/nut-taxonomy/nut-taxonomy.module.ts","src/app/nut-taxonomy/taxonomy-list/taxonomy-list.component.css","src/app/nut-taxonomy/taxonomy-list/taxonomy-list.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"text-center\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\">\\n                    <CoreLib-list-taxonomies routeUrl = {{currentURL}} magazineId=\\\"{{magazineId}}\\\"></CoreLib-list-taxonomies>     \\n                </div>\\n                <div class=\\\"col-md-4 mt-5\\\">\\n                    <div class=\\\"mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\">\\n                        <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TaxonomyListComponent } from './taxonomy-list/taxonomy-list.component';\n\n\n\nconst routes: Routes = [\n  { path : \"\", component: TaxonomyListComponent  },\n  { path : \":any\", component: TaxonomyListComponent  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NutTaxonomyRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NutTaxonomyRoutingModule } from './nut-taxonomy-routing.module';\nimport { TaxonomyListComponent } from './taxonomy-list/taxonomy-list.component';\nimport { ContentsModule,HomeModule, SitesModule,AdsModule,TaxonomiesModule} from 'rodman-core';\nimport { DfpModule } from 'ngx-dfp';\n\n\n@NgModule({\n  declarations: [TaxonomyListComponent],\n  imports: [\n    CommonModule,\n    NutTaxonomyRoutingModule, ContentsModule,HomeModule, SitesModule,AdsModule,TaxonomiesModule,\n    DfpModule.forRoot({\n      idleLoad: true,\n      enableVideoAds: true,\n      personalizedAds: true, // Request personalized ads by default\n      singleRequestMode: true, // Only applies to initial refresh\n      onSameNavigation: 'refresh',\n      globalTargeting: {\n        // food: ['NUT', 'HOME']\n      }\n    }) \n\n  ]\n})\nexport class NutTaxonomyModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9OVVQvc3JjL2FwcC9udXQtdGF4b25vbXkvdGF4b25vbXktbGlzdC90YXhvbm9teS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute ,NavigationEnd } from '@angular/router'; \nimport{ environment } from '../../../environments/environment';\nimport { RodmanCoreService } from '../../../../../rodman-core/src/lib/rodman-core.service';\n\n@Component({\n  selector: 'NUT-taxonomy-list',\n  templateUrl: './taxonomy-list.component.html',\n  styleUrls: ['./taxonomy-list.component.css']\n})\nexport class TaxonomyListComponent implements OnInit {\n  public magazineId :any;\n  currentURL : any ;\n  viewAdRender:number;\n  getAllAd:any=[];\n  constructor(private router:Router,public RodmanCoreService:RodmanCoreService) {\n       this.magazineId = environment.magazineId;\n       router.events.subscribe(event => {\n        if (event instanceof NavigationEnd ) {\n          this.currentURL = event.url; \n        }\n      });\n\n      this.RodmanCoreService.getAllAdst(this.magazineId).subscribe((data =>{\n        this.getAllAd = data;\n        this.viewAdRender = 1;\n     }))\n\n\n   }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"nut-taxonomy-nut-taxonomy-module-es5.js"}